{"version":3,"sources":["../../src/icons/close.tsx","../../src/icons/share.tsx","../../src/helpers/storage.ts","../../src/intl/messages/index.ts","../../src/intl/format.ts","../../src/index.tsx","../../src/helpers/detect.ts","../../src/hooks/useDidMountEffect.ts","App.tsx","index.tsx"],"names":["Close","className","onClick","xmlns","width","height","viewBox","d","Share","Storage","get","window","error","console","set","fr","en","formatMessage","id","language","navigator","messages","ReactPWAToHomeScreen","shouldHide","userAgent","test","isIphone","React","hidden","setHidden","effect","didMount","useDidMountEffect","styles","App","ReactDOM","render","document","getElementById"],"mappings":"kpBAOwBA,K,IAAQC,cAAWC,YACzC,OACE,+BACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,cACRL,UAAWA,EACXC,QAASA,GAET,gCAAMK,EAAE,6NACR,gCAAMA,EAAE,4Q,SCZUC,K,IAAQP,cAC9B,OACE,+BACEE,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,oBACRL,UAAWA,GAEX,gCAAMM,EAAE,2PACR,gCAAMA,EAAE,+G,IChBOE,a,uBACZC,IAAP,YACE,IACE,OAAOC,4BAAP,GACA,MAAOC,GAEP,OADAC,8DACA,O,EAIGC,IAAP,cACE,IACEH,iCACA,MAAOC,GACPC,gE,EAdeJ,GCGrB,EAAe,CACbM,G,mHACAC,G,kGCHWC,EAAgB,SAACC,GAC5B,IAAMC,EAAWC,8BAAjB,GAEA,gBAAIC,KACKA,KAAP,GAGKA,KAAP,ICAWC,EAAuB,WAClC,IAAMC,GCVgB,WACtB,IAAMC,EAAYb,2BAAlB,cAEA,MAAO,SAASc,KAAhB,GDQGC,IADH,SACiBjB,wC,EACWkB,sBAArBC,OAAQC,QEVF,SAACC,EAAD,GACb,IAAMC,EAAWJ,kBAAjB,GAEAA,qBAAgB,WACVI,EAAJ,QAAsBD,IACjBC,eAFPJ,GFSAK,EAAkB,WAChB,GACEvB,iDAED,CAJHuB,IAQA,OACE,+BACE/B,UACEgC,EAAO,gCAA+BL,EAAS,UAAzC,MAGR,+BAAK3B,UAAWgC,EAAO,kCACrB,+BAAKhC,UAAWgC,EAAO,oCACrB,+BAAKhC,UAAWgC,EAAO,2CACrB,+BAAKhC,UAAWgC,EAAO,kCACpBhB,EAFL,YAIE,+BAAKhB,UAAWgC,EAAO,kCACpBhB,EADH,OAEE,2BACEhB,UAAWgC,EAAO,wCAEnBhB,EAVP,YAaE,+BAAKhB,UAAU,yCACb,2BACEA,UAAWgC,EAAO,sCAClB/B,QAzBe,kBAAM2B,GAAN,WGXdK,G,KAJH,WACV,OAAO,gBAAC,EAAD,QCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.51d40b66.chunk.js","sourcesContent":["import * as React from 'react'\n\ninterface Props {\n  className: string\n  onClick: () => void\n}\n\nexport default function Close({ className, onClick }: Props) {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='20'\n      height='20'\n      viewBox='0 0 496 496'\n      className={className}\n      onClick={onClick}\n    >\n      <path d='M248 0C111.033 0 0 111.033 0 248s111.033 248 248 248 248-111.033 248-248C495.841 111.099 384.901.159 248 0zm0 480C119.87 480 16 376.13 16 248S119.87 16 248 16s232 103.87 232 232c-.141 128.072-103.928 231.859-232 232z' />\n      <path d='M361.136 134.864a8 8 0 00-11.312 0L248 236.688 146.176 134.864a8 8 0 10-11.312 11.312L236.688 248 134.864 349.824a8 8 0 00-.196 11.312 8 8 0 0011.508 0L248 259.312l101.824 101.824a8 8 0 0011.312-.196 8 8 0 000-11.116L259.312 248l101.824-101.824a8 8 0 000-11.312z' />\n    </svg>\n  )\n}\n","import * as React from 'react'\n\ninterface Props {\n  className: string\n}\n\nexport default function Share({ className }: Props) {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='20'\n      height='20'\n      viewBox='0 0 551.13 551.13'\n      className={className}\n    >\n      <path d='M465.016 172.228h-51.668v34.446h34.446v310.011H103.337V206.674h34.446v-34.446H86.114c-9.52 0-17.223 7.703-17.223 17.223v344.456c0 9.52 7.703 17.223 17.223 17.223h378.902c9.52 0 17.223-7.703 17.223-17.223V189.451c0-9.52-7.703-17.223-17.223-17.223z' />\n      <path d='M258.342 65.931v244.08h34.446V65.931l73.937 73.937 24.354-24.354L275.565 0 160.051 115.514l24.354 24.354z' />\n    </svg>\n  )\n}\n","export default class Storage {\n  static get(key: string): string | null {\n    try {\n      return window.localStorage.getItem(key)\n    } catch (error) {\n      console.error(`Error while getting data from localStorage`, error)\n      return null\n    }\n  }\n\n  static set(key: string, value: string): void {\n    try {\n      window.localStorage.setItem(key, value)\n    } catch (error) {\n      console.error(`Error while setting data from localStorage`, error)\n    }\n  }\n}\n","import fr from './fr.json'\nimport en from './en.json'\n\nexport default {\n  fr: fr,\n  en: en,\n}\n","import messages from './messages'\n\nexport const formatMessage = (id: string) => {\n  const language = navigator.language.split('-')[0]\n\n  if (messages[language] === undefined) {\n    return messages.en[id]\n  }\n\n  return messages[language][id]\n}\n","import * as React from 'react'\nimport useDidMountEffect from './hooks/useDidMountEffect'\nimport styles from './styles.module.css'\nimport CloseIcon from './icons/close'\nimport ShareIcon from './icons/share'\nimport Storage from './helpers/storage'\nimport { isIphone } from './helpers/detect'\nimport { formatMessage } from './intl/format'\n\nexport const ReactPWAToHomeScreen = () => {\n  const shouldHide =\n    !isIphone() || Storage.get('react-pwa-to-homescreen-hidden') === 'true'\n  const [hidden, setHidden] = React.useState(shouldHide)\n\n  useDidMountEffect(() => {\n    if (hidden) {\n      Storage.set('react-pwa-to-homescreen-hidden', 'true')\n    }\n  }, [hidden])\n\n  const onCloseButtonClick = () => setHidden(true)\n\n  return (\n    <div\n      className={\n        styles[`react-pwa-to-homescreen-root${hidden ? '-hidden' : ''}`]\n      }\n    >\n      <div className={styles['react-pwa-to-homescreen-popup']}>\n        <div className={styles['react-pwa-to-homescreen-wrapper']}>\n          <div className={styles['react-pwa-to-homescreen-labels-wrapper']}>\n            <div className={styles['react-pwa-to-homescreen-label']}>\n              {formatMessage('install')}\n            </div>\n            <div className={styles['react-pwa-to-homescreen-label']}>\n              {formatMessage('tap')}\n              <ShareIcon\n                className={styles['react-pwa-to-homescreen-share-icon']}\n              />\n              {formatMessage('button')}\n            </div>\n          </div>\n          <div className='react-pwa-to-homescreen-close-wrapper'>\n            <CloseIcon\n              className={styles['react-pwa-to-homescreen-close-icon']}\n              onClick={onCloseButtonClick}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const isIphone = () => {\n  const userAgent = window.navigator.userAgent.toLowerCase()\n\n  return /iphone/.test(userAgent)\n}\n","import * as React from 'react'\n\nexport default (effect: React.EffectCallback, deps?: React.DependencyList) => {\n  const didMount = React.useRef(false)\n\n  React.useEffect(() => {\n    if (didMount.current) effect()\n    else didMount.current = true\n  }, deps)\n}\n","import * as React from 'react'\n\nimport { ReactPWAToHomeScreen } from 'react-pwa-to-homescreen'\nimport 'react-pwa-to-homescreen/dist/index.css'\n\nconst App = () => {\n  return <ReactPWAToHomeScreen />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}